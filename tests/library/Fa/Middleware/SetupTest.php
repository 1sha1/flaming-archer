<?php

namespace Fa\Middleware;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-11-19 at 21:14:54.
 */
class SetupTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var Setup
     */
    protected $middleware;
    
    /**
     * @var UserDao
     */
    protected $userDao;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->userDao = $this->getMock('Fa\Dao\UserDao', array('findAll'), array(), '', false);
        $this->middleware = new Setup($this->userDao);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->middleware = null;
    }

    public function testObjectCreation()
    {
        $this->assertInstanceOf('Fa\Middleware\Setup', $this->middleware);
        $this->assertInstanceOf('Slim\Middleware', $this->middleware);
    }
    
    /**
     * @covers Fa\Middleware\Setup::call
     */
    public function testCallRequiresSetup()
    {
        \Slim\Environment::mock(array(
            'SCRIPT_NAME' => '/index.php',
            'PATH_INFO' => '/'
        ));
        
        $app = new \Slim\Slim();
        
        $app->get('/', function() {
            echo 'Home page';
        });
        
        $this->userDao->expects($this->once())
                ->method('findAll')
                ->will($this->returnValue(array()));
        
        $this->middleware->setApplication($app);
        $this->middleware->setNextMiddleware($app);
        $this->middleware->call();
        
        $response = $app->response();
        $this->assertTrue($response->isRedirect());
        $this->assertEquals(302, $response->status());
        $this->assertEquals('/setup', $response->header('location'));
    }

}
