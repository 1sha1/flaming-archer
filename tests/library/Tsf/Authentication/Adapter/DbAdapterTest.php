<?php

namespace Tsf\Authentication\Adapter;
use Zend\Authentication\Result;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2012-11-13 at 07:43:23.
 */
class DbAdapterTest extends \CommonDbTestCase
{

    /**
     * @var DbAdapter
     */
    protected $adapter;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        parent::setUp();
        $hasher = new \Phpass\Hash();
        $this->adapter = new DbAdapter($this->db, $hasher);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->adapter = null;
        parent::tearDown();
    }
    
    public function testCreation()
    {
        $this->assertInstanceOf('Tsf\Authentication\Adapter\DbAdapter', $this->adapter);
    }

    /**
     * @covers Tsf\Authentication\Adapter\DbAdapter::authenticate
     */
    public function testAuthenticateSuccess()
    {
        $this->adapter->setCredentials('user@example.com', 'password');
        $result = $this->adapter->authenticate();
        
        $this->assertInstanceOf('\Zend\Authentication\Result', $result);
        $this->assertEquals(array('email' => 'user@example.com'), $result->getIdentity());
        $this->assertEquals(Result::SUCCESS, $result->getCode());
        $this->assertEquals(array(), $result->getMessages());
    }
    
    /**
     * @covers Tsf\Authentication\Adapter\DbAdapter::authenticate
     */
    public function testAuthenticateFailure()
    {
        $this->adapter->setCredentials('user@example.com', 'badpassword');
        $result = $this->adapter->authenticate();
        
        $this->assertInstanceOf('\Zend\Authentication\Result', $result);
        $this->assertEquals(array(), $result->getIdentity());
        $this->assertEquals(Result::FAILURE_CREDENTIAL_INVALID, $result->getCode());
        $this->assertEquals(array('Invalid username or password provided'), $result->getMessages());
    }

}
